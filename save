import React from "react";

const totalDailyMinutes = 8 * 60;
// Function to get color based on class number
const getClassColor = (classNumber) => {
  const colors = [
    "#bc7229",
    "#af57db",
    "#2eb88a",
    "#17C6C7",
    "#fd9a01",
    "#cc3433",
    "#e23670",
    "#2662d9",
    "#E74C3C",
    "#2ECC71",
    "#E67E22",
    "#3498DB",
  ];
  return colors[(classNumber - 1) % colors.length]; // Ensure it cycles through colors
};

const GantChart = ({ schedules }) => {
  const days = ["Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu", "Minggu"];

  const calculatePercentage = (start, end) => {
    const [startHour, startMinute] = start.split(":").map(Number);
    const [endHour, endMinute] = end.split(":").map(Number);
    const startTime = startHour * 60 + startMinute;
    const endTime = endHour * 60 + endMinute;
    const totalMinutes = endTime - startTime;
    return (totalMinutes / schedules.durasi) * 100; // Convert to percentage
  };

  // Function to calculate the 'left' position in percentage
  const calculateLeft = (start) => {
    const [startHour, startMinute] = start.split(":").map(Number);
    const startTime = startHour * 60 + startMinute;
    return ((startTime - 420) / schedules.durasi) * 100; // 420 = 07:00 in minutes
  };

  return (
    <div className="overflow-x-auto">
      {days.map((day) => (
        <div
          key={day}
          className="grid grid-cols-1 sm:grid-cols-10 gap-1 min-w-[300px] sm:min-w-0 sm:h-10"
        >
          <div className="flex items-center justify-center font-medium  text-gray-700  border-gray-100 p-2">
            <p className="text-[0.625rem]">{day}</p>
          </div>
          <div className="relative   sm:col-span-9 border border-gray-100 h-14    sm:h-10">
            {schedules
              .filter((schedule) => schedule.hari === day)
              .map((schedule, idx) => {
                const width = calculatePercentage(
                  schedule.mulai,
                  schedule.selesai
                );
                const left = calculateLeft(schedule.mulai);
                const color = getClassColor(schedule.kelas.kelas);

                return (
                  <div
                    key={idx}
                    className="absolute top-1 bottom-1 text-center  rounded-sm flex flex-col items-center justify-center shadow-md"
                    style={{
                      width: `${width}%`,
                      left: `${left}%`,
                      backgroundColor: color,
                      color: "#FFFFFF",
                      fontSize: "0.625rem",
                      padding: "2px 5px",
                    }}
                  >
                    <p className="text-[0.5rem]">Kelas {schedule.class}</p>
                    <p className="text-[0.5rem] flex flex-nowrap gap-1 ">
                      {schedule.mulai} <span> - </span> {schedule.selesai}
                    </p>
                    {/* <span className="sm:hidden">
                        {schedule.start} <br />
                        <br /> {schedule.end}
                      </span> */}
                  </div>
                );
              })}
          </div>
        </div>
      ))}
    </div>
  );
};

export default GantChart;
